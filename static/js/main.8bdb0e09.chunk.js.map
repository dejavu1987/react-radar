{"version":3,"sources":["components/Radar/Radar.jsx","App.js","reportWebVitals.js","index.js"],"names":["padding","Radar","options","segments","rings","elements","useState","RadarDiagram","radarDiagram","setRadarDiagram","baseDimension","viewBox","setViewBox","useEffect","vb","totalAngle","Math","PI","className","style","height","containerHeight","id","xmlns","r","cx","cy","fill","x1","y1","x2","y2","stroke","ringAxes","map","ringAxis","j","strokeWidth","fillOpacity","slug","segmentAxes","segAxis","axis","d","labelPath","color","href","fontWeight","fontSize","fontFamily","startOffset","textAnchor","label","dots","dot","transform","x","y","substr","App","minPlotRadius","radarConfig","setRadarConfig","radarSegments","radarRings","segment","ring","radarElements","onChange","e","parseFloat","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bdb0e09.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport RadarDiagram from 'radar-diagram';\nimport './radar.css';\nconst padding = 50;\nconst Radar = ({ options, segments, rings, elements }) => {\n  const [radarDiagram, setRadarDiagram] = useState(\n    new RadarDiagram(options, { elements, rings, segments })\n  );\n  const [viewBox, setViewBox] = useState(\n    `${-padding} ${-padding} ${\n      radarDiagram.options.baseDimension + 2 * padding\n    } ${radarDiagram.options.baseDimension + 2 * padding}`\n  );\n\n  const containerHeight = () => {\n    switch (options.totalAngle) {\n      case Math.PI:\n        return '50vw';\n      default:\n        return '95vw';\n    }\n  };\n\n  useEffect(() => {\n    setRadarDiagram(new RadarDiagram(options, { elements, rings, segments }));\n  }, [options, segments, rings, elements]);\n\n  useEffect(() => {\n    if (options) {\n      let vb;\n      switch (options.totalAngle) {\n        case Math.PI:\n          vb = `${-padding} ${-padding} ${\n            radarDiagram.options.baseDimension + 2 * padding\n          } ${radarDiagram.options.baseDimension / 2 + padding}`;\n          break;\n        case Math.PI * 2:\n          vb = `${-padding} ${-padding} ${\n            radarDiagram.options.baseDimension + 2 * padding\n          } ${radarDiagram.options.baseDimension + 2 * padding}`;\n          break;\n        case Math.PI / 2:\n          vb = `${radarDiagram.options.baseDimension / 2} ${-padding} ${\n            (radarDiagram.options.baseDimension + 2 * padding) / 2\n          } ${(radarDiagram.options.baseDimension + 2 * padding) / 2}`;\n          break;\n        default:\n          break;\n      }\n      setViewBox(vb);\n    }\n  }, [options, radarDiagram.options.baseDimension]);\n\n  return (\n    <div className=\"radar-container\" style={{ height: containerHeight() }}>\n      <svg id=\"radar-plot\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={viewBox}>\n        <circle\n          r={radarDiagram.options.baseDimension / 2}\n          cx={radarDiagram.options.baseDimension / 2}\n          cy={radarDiagram.options.baseDimension / 2}\n          fill=\"#ddd\"\n        ></circle>\n        <line\n          x1={radarDiagram.options.baseDimension / 2}\n          y1=\"0\"\n          x2={radarDiagram.options.baseDimension / 2}\n          y2={radarDiagram.options.baseDimension}\n          stroke=\"#ddd\"\n        />\n        <line\n          x1=\"0\"\n          y1=\"499\"\n          x2={radarDiagram.options.baseDimension}\n          y2={radarDiagram.options.baseDimension / 2}\n          stroke=\"#000\"\n        />\n        {radarDiagram.ringAxes.map((ringAxis) => (\n          <circle\n            key={ringAxis.slug}\n            cx={radarDiagram.options.baseDimension / 2}\n            cy={radarDiagram.options.baseDimension / 2}\n            r={ringAxis.j}\n            stroke=\"#aaa\"\n            strokeWidth={1}\n            fill=\"#fff\"\n            fillOpacity={0.3}\n          ></circle>\n        ))}\n        {radarDiagram.segmentAxes.map((segAxis) => (\n          <g key={segAxis.slug}>\n            <line\n              className=\"radar__segment-axis\"\n              x1={segAxis.axis.x1}\n              x2={segAxis.axis.x2}\n              y1={segAxis.axis.y1}\n              y2={segAxis.axis.y2}\n              stroke={'#aaa'}\n              strokeWidth={1}\n            ></line>\n\n            <path\n              className=\"radar__segment__path\"\n              id={'label-path-' + segAxis.slug}\n              d={segAxis.axis.labelPath}\n              fill={'none'}\n              stroke={segAxis.color}\n              strokeWidth={15}\n            ></path>\n\n            <text>\n              <textPath\n                href={`#label-path-${segAxis.slug}`}\n                fill={'#555'}\n                fontWeight={'800'}\n                fontSize={`${radarDiagram.options.totalAngle / 3 + 0.5}em`}\n                fontFamily={'Sans-serif'}\n                stroke={segAxis.color}\n                strokeWidth={1}\n                startOffset={'50%'}\n                textAnchor={'middle'}\n              >\n                {segAxis.label}\n              </textPath>\n            </text>\n          </g>\n        ))}\n        {radarDiagram.dots.map((dot) => (\n          <g\n            key={dot.label}\n            className=\"radar__dot\"\n            style={{ transform: `translate(${dot.x}px, ${dot.y}px)` }}\n          >\n            <circle\n              r={dot.r}\n              stroke={'#aaa'}\n              strokeWidth={1}\n              fill={dot.color}\n            ></circle>\n            <text className=\"radar__dot__label\">{dot.label.substr(0, 1)}</text>\n          </g>\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nRadar.propTypes = {};\n\nexport default Radar;\n","import { useState } from 'react';\nimport './App.css';\nimport Radar from './components/Radar/Radar';\n\nfunction App() {\n  const [radarConfig, setRadarConfig] = useState({\n    totalAngle: Math.PI * 2,\n    padding: 20,\n    minPlotRadius: 120,\n  });\n  const [radarSegments] = useState([\n    { label: 'Fruit', slug: 'fruit', color: '#fa9' },\n    { label: 'Vegetable', slug: 'vegetable', color: '#ad0' },\n    {\n      label: 'Framework',\n      slug: 'framework',\n      color: '#7dc',\n    },\n    { label: 'Technology', slug: 'technology', color: '#caf' },\n  ]);\n  const [radarRings] = useState([\n    { label: 'High', slug: 'high' },\n    { label: 'Medium', slug: 'medium' },\n    { label: 'Low', slug: 'low' },\n  ]);\n  const [radarElements] = useState([\n    { label: 'Apple', segment: 'technology', ring: 'high' },\n    { label: 'Red Hat', segment: 'technology', ring: 'high' },\n  ]);\n  const handleTotalAngleChange = (e) => {\n    setRadarConfig({ ...radarConfig, totalAngle: parseFloat(e.target.value) });\n  };\n  return (\n    <div className=\"App\">\n      <section>\n        <fieldset>\n          <legend>Radar Config</legend>\n          <div>\n            <select onChange={handleTotalAngleChange}>\n              <option value={Math.PI * 2}>Full</option>\n              <option value={Math.PI}>Half</option>\n              <option value={Math.PI / 2}>Quarter</option>\n            </select>\n          </div>\n        </fieldset>\n      </section>\n      <Radar\n        options={radarConfig}\n        segments={radarSegments}\n        rings={radarRings}\n        elements={radarElements}\n      ></Radar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}