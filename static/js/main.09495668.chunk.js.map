{"version":3,"sources":["components/Radar/Radar.jsx","App.js","reportWebVitals.js","index.js"],"names":["padding","Radar","options","segments","rings","elements","svgRef","useRef","useState","RadarDiagram","radarDiagram","setRadarDiagram","useEffect","vb","totalAngle","Math","PI","baseDimension","TweenMax","to","attr","viewBox","className","style","height","containerHeight","id","xmlns","ref","el","r","cx","cy","fill","x1","y1","x2","y2","stroke","ringAxes","map","ringAxis","j","strokeWidth","fillOpacity","slug","segmentAxes","segAxis","idx","axis","d","getSegmentLabelPathBase","color","transform","length","href","fontWeight","fontSize","fontFamily","startOffset","textAnchor","label","dots","dot","x","y","substr","App","minPlotRadius","radarConfig","setRadarConfig","radarSegments","radarRings","radarElements","htmlFor","onChange","e","parseFloat","target","value","parseInt","type","min","max","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09495668.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport RadarDiagram from 'radar-diagram';\nimport './radar.css';\nimport { TweenMax } from 'gsap';\n\nconst padding = 50;\nconst Radar = ({ options, segments, rings, elements }) => {\n  let svgRef = useRef(null);\n  const [radarDiagram, setRadarDiagram] = useState(\n    new RadarDiagram(options, { elements, rings, segments })\n  );\n\n  const containerHeight = () => {\n    switch (options.totalAngle) {\n      case Math.PI:\n        return '50vw';\n      default:\n        return '95vw';\n    }\n  };\n\n  useEffect(() => {\n    setRadarDiagram(new RadarDiagram(options, { elements, rings, segments }));\n  }, [options, segments, rings, elements]);\n\n  useEffect(() => {\n    if (options) {\n      let vb;\n      switch (options.totalAngle) {\n        case Math.PI:\n          vb = `${-padding} ${-padding} ${\n            radarDiagram.options.baseDimension + 2 * padding\n          } ${radarDiagram.options.baseDimension / 2 + padding}`;\n          break;\n        case Math.PI * 2:\n          vb = `${-padding} ${-padding} ${\n            radarDiagram.options.baseDimension + 2 * padding\n          } ${radarDiagram.options.baseDimension + 2 * padding}`;\n          break;\n        case Math.PI / 2:\n          vb = `${radarDiagram.options.baseDimension / 2} ${-padding} ${\n            (radarDiagram.options.baseDimension + 2 * padding) / 2\n          } ${(radarDiagram.options.baseDimension + 2 * padding) / 2}`;\n          break;\n        default:\n          break;\n      }\n      TweenMax.to(svgRef, 1, { attr: { viewBox: vb } });\n    }\n  }, [options, radarDiagram.options.baseDimension]);\n\n  return (\n    <div className=\"radar-container\" style={{ height: containerHeight() }}>\n      <svg\n        id=\"radar-plot\"\n        viewBox={`${-padding} ${-padding} ${\n          radarDiagram.options.baseDimension + 2 * padding\n        } ${radarDiagram.options.baseDimension + 2 * padding}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        ref={(el) => (svgRef = el)}\n      >\n        <circle\n          r={radarDiagram.options.baseDimension / 2}\n          cx={radarDiagram.options.baseDimension / 2}\n          cy={radarDiagram.options.baseDimension / 2}\n          fill=\"#ddd\"\n        ></circle>\n        <line\n          x1={radarDiagram.options.baseDimension / 2}\n          y1=\"0\"\n          x2={radarDiagram.options.baseDimension / 2}\n          y2={radarDiagram.options.baseDimension}\n          stroke=\"#ddd\"\n        />\n        <line\n          x1=\"0\"\n          y1=\"499\"\n          x2={radarDiagram.options.baseDimension}\n          y2={radarDiagram.options.baseDimension / 2}\n          stroke=\"#000\"\n        />\n        {radarDiagram.ringAxes.map((ringAxis) => (\n          <circle\n            className=\"radar__ring\"\n            key={ringAxis.slug}\n            cx={radarDiagram.options.baseDimension / 2}\n            cy={radarDiagram.options.baseDimension / 2}\n            r={ringAxis.j}\n            stroke=\"#aaa\"\n            strokeWidth={1}\n            fill=\"#fff\"\n            fillOpacity={0.3}\n          ></circle>\n        ))}\n        {radarDiagram.segmentAxes.map((segAxis, idx) => (\n          <g key={segAxis.slug}>\n            <line\n              className=\"radar__segment-axis\"\n              x1={segAxis.axis.x1}\n              x2={segAxis.axis.x2}\n              y1={segAxis.axis.y1}\n              y2={segAxis.axis.y2}\n              stroke={'#aaa'}\n              strokeWidth={1}\n            ></line>\n\n            <path\n              className=\"radar__segment__path\"\n              id={'label-path-' + segAxis.slug}\n              d={radarDiagram.getSegmentLabelPathBase()}\n              fill={'none'}\n              stroke={segAxis.color}\n              strokeWidth={15}\n              style={{\n                transform: `rotate(${\n                  (-idx * radarDiagram.options.totalAngle) /\n                  radarDiagram.segments.length\n                }rad)`,\n              }}\n            ></path>\n\n            <text>\n              <textPath\n                href={`#label-path-${segAxis.slug}`}\n                fill={'#555'}\n                fontWeight={'800'}\n                fontSize={`${radarDiagram.options.totalAngle / 3 + 0.5}em`}\n                fontFamily={'Sans-serif'}\n                stroke={segAxis.color}\n                strokeWidth={1}\n                startOffset={'50%'}\n                textAnchor={'middle'}\n              >\n                {segAxis.label}\n              </textPath>\n            </text>\n          </g>\n        ))}\n        {radarDiagram.dots.map((dot) => (\n          <g\n            key={dot.label}\n            className=\"radar__dot\"\n            style={{ transform: `translate(${dot.x}px, ${dot.y}px)` }}\n          >\n            <path\n              fill={dot.color}\n              transform=\"scale(0.1)\"\n              stroke=\"black\"\n              d=\"M131.2,101.7c4.1,56.2-28.6,86.3-64.6,86.3S-3.7,157.2,1,101.7C6,43,45,1,66.1,1C86,1,127,44,131.2,101.7z\"\n            ></path>\n            {/* <circle\n              r={dot.r}\n              stroke={'#aaa'}\n              strokeWidth={1}\n              fill={dot.color}\n            ></circle> */}\n            <text className=\"radar__dot__label\">{dot.label.substr(0, 5)}</text>\n          </g>\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nRadar.propTypes = {};\n\nexport default Radar;\n","import { useState } from 'react';\nimport './App.css';\nimport Radar from './components/Radar/Radar';\nimport elements from './data/elements.json';\nimport segments from './data/segments.json';\nimport rings from './data/rings.json';\nfunction App() {\n  const [radarConfig, setRadarConfig] = useState({\n    totalAngle: Math.PI * 2,\n    padding: 20,\n    minPlotRadius: 120,\n  });\n  const [radarSegments] = useState(segments);\n  const [radarRings] = useState(rings);\n  const [radarElements] = useState(elements);\n  const handleTotalAngleChange = (e) => {\n    setRadarConfig({ ...radarConfig, totalAngle: parseFloat(e.target.value) });\n  };\n  const handleMinPlotRadius = (e) => {\n    setRadarConfig({ ...radarConfig, minPlotRadius: parseInt(e.target.value) });\n  };\n  const handlePaddingChange = (e) => {\n    setRadarConfig({\n      ...radarConfig,\n      padding: parseInt(e.target.value),\n    });\n  };\n  return (\n    <div className=\"App\">\n      <section>\n        <fieldset>\n          <legend>Radar Config</legend>\n          <div className=\"configs\">\n            <div>\n              <label htmlFor=\"totalAngle\">Total Angle</label>\n              <select id=\"totalAngle\" onChange={handleTotalAngleChange}>\n                <option value={Math.PI * 2}>Full Circle</option>\n                <option value={Math.PI}>Half circle</option>\n                <option value={Math.PI / 2}>Quarter of a circle</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"minPlotRadius\">Minimum plot radius</label>\n              <input\n                id=\"minPlotRadius\"\n                onChange={handleMinPlotRadius}\n                type=\"range\"\n                min=\"50\"\n                max=\"250\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"outwardPadding\">Outer Padding</label>\n              <input\n                id=\"outwardPadding\"\n                onChange={handlePaddingChange}\n                type=\"range\"\n                min=\"0\"\n                max=\"50\"\n              />\n            </div>\n          </div>\n        </fieldset>\n      </section>\n      <Radar\n        options={radarConfig}\n        segments={radarSegments}\n        rings={radarRings}\n        elements={radarElements}\n      ></Radar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}